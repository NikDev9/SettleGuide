{"ast":null,"code":"import { useDebugValue } from 'react';\nimport { map } from 'rxjs/operators';\nimport { useObservableState } from './use-observable-state';\nimport { useObservable } from './use-observable';\nexport function useObservableGetState(state$, initialState) {\n  var path = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    path[_i - 2] = arguments[_i];\n  }\n\n  var value = useObservableState(useObservable(function () {\n    return state$.pipe(map(function (state) {\n      return path.reduce(getValue, state);\n    }));\n  }), initialState);\n  useDebugValue(value);\n  return value;\n}\n\nfunction getValue(obj, key) {\n  return obj[key];\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AAEA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAwVA,OAAM,SAAUC,qBAAV,CACJC,MADI,EAEJC,YAFI,EAE+B;AACnC;;OAAA,yCAAc;AAAdC;;;AAEA,MAAMC,KAAK,GAAGN,kBAAkB,CAC9BC,aAAa,CAAC;AACZ,iBAAM,CAACM,IAAP,CAAYR,GAAG,CAAC,iBAAK;AAAI,iBAAI,CAACS,MAAL,CAAYC,QAAZ,EAAsBC,KAAtB;AAA4B,KAAtC,CAAf;AAAuD,GAD5C,CADiB,EAI9BN,YAJ8B,CAAhC;AAMAN,eAAa,CAACQ,KAAD,CAAb;AACA,SAAOA,KAAP;AACD;;AAED,SAASG,QAAT,CAAwCE,GAAxC,EAAgDC,GAAhD,EAAsD;AACpD,SAAOD,GAAG,CAACC,GAAD,CAAV;AACD","names":["useDebugValue","map","useObservableState","useObservable","useObservableGetState","state$","initialState","path","value","pipe","reduce","getValue","state","obj","key"],"sources":["F:\\SettleGuide\\frontend\\node_modules\\observable-hooks\\src\\use-observable-get-state.ts"],"sourcesContent":["import { useDebugValue } from 'react'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { useObservableState } from './use-observable-state'\nimport { useObservable } from './use-observable'\n\n/**\n * Gets the value at path of state. Similar to lodash `get`.\n * Only changes of the resulted value will trigger a rerendering.\n * Errors are thrown on unreachable path.\n *\n * @param state$ Output state.\n */\nexport function useObservableGetState<TState>(\n  state$: Observable<TState>,\n  initialState: TState | (() => TState)\n): TState\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void\n>(state$: Observable<TState>, initialState: TInitial): TState | TInitial\nexport function useObservableGetState<TState, A extends keyof TState>(\n  state$: Observable<TState>,\n  initialState: TState[A] | (() => TState[A]),\n  pA: A\n): TState[A]\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A\n): TState[A] | TInitial\nexport function useObservableGetState<\n  TState,\n  A extends keyof TState,\n  B extends keyof TState[A]\n>(\n  state$: Observable<TState>,\n  initialState: TState[A][B] | (() => TState[A][B]),\n  pA: A,\n  pB: B\n): TState[A][B]\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState,\n  B extends keyof TState[A]\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A,\n  pB: B\n): TState[A][B] | TInitial\nexport function useObservableGetState<\n  TState,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B]\n>(\n  state$: Observable<TState>,\n  initialState: TState[A][B][C] | (() => TState[A][B][C]),\n  pA: A,\n  pB: B,\n  pC: C\n): TState[A][B][C]\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B]\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A,\n  pB: B,\n  pC: C\n): TState[A][B][C] | TInitial\nexport function useObservableGetState<\n  TState,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C]\n>(\n  state$: Observable<TState>,\n  initialState: TState[A][B][C][D] | (() => TState[A][B][C][D]),\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D\n): TState[A][B][C][D]\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C]\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D\n): TState[A][B][C][D] | TInitial\nexport function useObservableGetState<\n  TState,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D]\n>(\n  state$: Observable<TState>,\n  initialState: TState[A][B][C][D][E] | (() => TState[A][B][C][D][E]),\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E\n): TState[A][B][C][D][E]\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D]\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E\n): TState[A][B][C][D][E] | TInitial\nexport function useObservableGetState<\n  TState,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D],\n  F extends keyof TState[A][B][C][D][E]\n>(\n  state$: Observable<TState>,\n  initialState: TState[A][B][C][D][E][F] | (() => TState[A][B][C][D][E][F]),\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E,\n  pF: F\n): TState[A][B][C][D][E][F]\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D],\n  F extends keyof TState[A][B][C][D][E]\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E,\n  pF: F\n): TState[A][B][C][D][E][F] | TInitial\nexport function useObservableGetState<\n  TState,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D],\n  F extends keyof TState[A][B][C][D][E],\n  G extends keyof TState[A][B][C][D][E][F]\n>(\n  state$: Observable<TState>,\n  initialState:\n    | TState[A][B][C][D][E][F][G]\n    | (() => TState[A][B][C][D][E][F][G]),\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E,\n  pF: F,\n  pG: G\n): TState[A][B][C][D][E][F][G]\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D],\n  F extends keyof TState[A][B][C][D][E],\n  G extends keyof TState[A][B][C][D][E][F]\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E,\n  pF: F,\n  pG: G\n): TState[A][B][C][D][E][F][G] | TInitial\nexport function useObservableGetState<\n  TState,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D],\n  F extends keyof TState[A][B][C][D][E],\n  G extends keyof TState[A][B][C][D][E][F],\n  H extends keyof TState[A][B][C][D][E][F][G]\n>(\n  state$: Observable<TState>,\n  initialState:\n    | TState[A][B][C][D][E][F][G][H]\n    | (() => TState[A][B][C][D][E][F][G][H]),\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E,\n  pF: F,\n  pG: G,\n  pH: H\n): TState[A][B][C][D][E][F][G][H]\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D],\n  F extends keyof TState[A][B][C][D][E],\n  G extends keyof TState[A][B][C][D][E][F],\n  H extends keyof TState[A][B][C][D][E][F][G]\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E,\n  pF: F,\n  pG: G,\n  pH: H\n): TState[A][B][C][D][E][F][G][H] | TInitial\nexport function useObservableGetState<\n  TState,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D],\n  F extends keyof TState[A][B][C][D][E],\n  G extends keyof TState[A][B][C][D][E][F],\n  H extends keyof TState[A][B][C][D][E][F][G],\n  I extends keyof TState[A][B][C][D][E][F][G][H]\n>(\n  state$: Observable<TState>,\n  initialState:\n    | TState[A][B][C][D][E][F][G][H][I]\n    | (() => TState[A][B][C][D][E][F][G][H][I]),\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E,\n  pF: F,\n  pG: G,\n  pH: H,\n  pI: I\n): TState[A][B][C][D][E][F][G][H][I]\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D],\n  F extends keyof TState[A][B][C][D][E],\n  G extends keyof TState[A][B][C][D][E][F],\n  H extends keyof TState[A][B][C][D][E][F][G],\n  I extends keyof TState[A][B][C][D][E][F][G][H]\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E,\n  pF: F,\n  pG: G,\n  pH: H,\n  pI: I\n): TState[A][B][C][D][E][F][G][H][I] | TInitial\nexport function useObservableGetState<\n  TState,\n  TInitial extends null | undefined | void,\n  A extends keyof TState,\n  B extends keyof TState[A],\n  C extends keyof TState[A][B],\n  D extends keyof TState[A][B][C],\n  E extends keyof TState[A][B][C][D],\n  F extends keyof TState[A][B][C][D][E],\n  G extends keyof TState[A][B][C][D][E][F],\n  H extends keyof TState[A][B][C][D][E][F][G],\n  I extends keyof TState[A][B][C][D][E][F][G][H],\n  J extends keyof TState[A][B][C][D][E][F][G][H][I]\n>(\n  state$: Observable<TState>,\n  initialState: TInitial,\n  pA: A,\n  pB: B,\n  pC: C,\n  pD: D,\n  pE: E,\n  pF: F,\n  pG: G,\n  pH: H,\n  pI: I,\n  pJ: J\n): TState[A][B][C][D][E][F][G][H][I][J] | TInitial\nexport function useObservableGetState<TState, TInit>(\n  state$: Observable<TState>,\n  initialState: TInit | (() => TInit),\n  ...path: any[]\n) {\n  const value = useObservableState(\n    useObservable(() =>\n      state$.pipe(map(state => path.reduce(getValue, state)))\n    ),\n    initialState\n  )\n  useDebugValue(value)\n  return value\n}\n\nfunction getValue<T, K extends keyof T>(obj: T, key: K): T[K] {\n  return obj[key]\n}\n"]},"metadata":{},"sourceType":"module"}