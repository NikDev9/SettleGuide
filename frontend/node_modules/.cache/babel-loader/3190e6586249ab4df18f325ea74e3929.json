{"ast":null,"code":"var _jsxFileName = \"F:\\\\SettleGuide\\\\frontend\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../css/Home.css';\nimport Header from './Header.js';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport axios from 'axios';\nimport { HOME_URL } from \"../constants\";\nimport { useNavigate, useLocation, Navigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Chatbot from 'react-chatbot-kit';\nimport ActionProvider from './ActionProvider';\nimport MessageParser from './MessageParser';\nimport config from './Config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [homeData, setHomeData] = useState([]);\n  const nav = useNavigate();\n  const location = useLocation();\n\n  const fetchData = () => {\n    var prov;\n\n    try {\n      prov = location.state.province;\n    } catch {\n      prov = Cookies.get('province');\n    }\n\n    console.log('prov', prov);\n    const req = {\n      'prov': prov\n    };\n    console.log('home: province: ', req);\n    axios.post(HOME_URL, req).then(res => {\n      console.log('res data', res.data);\n      setHomeData(res.data);\n    });\n  };\n\n  React.useEffect(() => {\n    fetchData();\n  });\n\n  const openInfo = content => {\n    nav('/info', {\n      state: {\n        content: content\n      }\n    });\n  };\n\n  const closeBot = () => {\n    const targetDiv = document.getElementById(\"guidebot\");\n    const button = document.getElementById(\"botBtn\");\n\n    if (targetDiv.style.display !== \"none\") {\n      targetDiv.style.display = \"none\";\n      button.textContent = \"Open Guide Bot\";\n    } else {\n      targetDiv.style.display = \"block\";\n      button.textContent = \"Close Guide Bot\";\n    }\n  };\n\n  const showData = () => {\n    if (homeData) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Home\",\n        children: homeData.map(card => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"cardStyle\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cardimgdiv\",\n                children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                  className: \"cardimg\",\n                  src: card.imglink\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: card.heading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: card.shortinfo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clickButton\",\n                onClick: () => openInfo(card.content),\n                children: \"See more\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, card.heading, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Home\",\n      children: [showData(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot\",\n        id: \"guidebot\",\n        onChange: handleChange,\n        children: /*#__PURE__*/_jsxDEV(Chatbot, {\n          config: config,\n          actionProvider: ActionProvider,\n          messageParser: MessageParser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"botbutton\",\n        id: \"botBtn\",\n        onClick: () => closeBot(),\n        children: \"Close Guide Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"bYN1kTqhcT+3x6vOJomr00XyemE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["F:/SettleGuide/frontend/src/components/Home.js"],"names":["React","useState","Header","Col","Card","axios","HOME_URL","useNavigate","useLocation","Navigate","Cookies","Chatbot","ActionProvider","MessageParser","config","Home","homeData","setHomeData","nav","location","fetchData","prov","state","province","get","console","log","req","post","then","res","data","useEffect","openInfo","content","closeBot","targetDiv","document","getElementById","button","style","display","textContent","showData","map","card","imglink","heading","shortinfo","handleChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport '../css/Home.css';\r\nimport Header from './Header.js';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios';\r\nimport { HOME_URL } from \"../constants\";\r\nimport { useNavigate, useLocation, Navigate } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport Chatbot from 'react-chatbot-kit';\r\nimport ActionProvider from './ActionProvider';\r\nimport MessageParser from './MessageParser';\r\nimport config from './Config';\r\n\r\nconst Home = () => {\r\n\r\n    const [homeData, setHomeData] = useState([]);\r\n    const nav = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const fetchData = () => {\r\n        var prov;\r\n        try {\r\n            prov = location.state.province;\r\n        }\r\n        catch {\r\n            prov = Cookies.get('province');\r\n        }\r\n        console.log('prov', prov)\r\n        const req = {'prov': prov};\r\n        console.log('home: province: ',req)\r\n        axios.post(HOME_URL, req)\r\n        .then(res => {\r\n            console.log('res data', res.data);\r\n            setHomeData(res.data);\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData();\r\n    })\r\n\r\n    const openInfo = (content) => {\r\n        nav('/info', {\r\n            state: {\r\n            content: content }\r\n        });\r\n    }\r\n\r\n    const closeBot = () => {\r\n        const targetDiv = document.getElementById(\"guidebot\");\r\n        const button = document.getElementById(\"botBtn\");\r\n        if (targetDiv.style.display !== \"none\") {\r\n            targetDiv.style.display = \"none\";\r\n            button.textContent = \"Open Guide Bot\";\r\n          } else {\r\n            targetDiv.style.display = \"block\";\r\n            button.textContent = \"Close Guide Bot\";\r\n          }\r\n    }\r\n\r\n    const showData = () => {\r\n        if(homeData) {\r\n            return (\r\n                <div className=\"Home\">\r\n                {homeData.map((card) => \r\n                    <Col>\r\n                        <Card className=\"cardStyle\" key={card.heading}>\r\n                            <Card.Body>\r\n                                <div className=\"cardimgdiv\">\r\n                                    <Card.Img className=\"cardimg\" src={card.imglink} />\r\n                                </div>\r\n                                <Card.Title>{card.heading}</Card.Title>\r\n                                <Card.Text>{card.shortinfo}\r\n                                </Card.Text>\r\n                                <button className=\"clickButton\" onClick={() => openInfo(card.content)}>See more</button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                )}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <Header/>\r\n            <div className=\"Home\">\r\n                {showData()}\r\n                <div className=\"bot\" id=\"guidebot\" onChange={handleChange}>\r\n                    <Chatbot config={config} actionProvider={ActionProvider} messageParser={MessageParser} />\r\n                </div>\r\n                <button className=\"botbutton\" id=\"botBtn\" onClick={() => closeBot()}>Close Guide Bot</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}